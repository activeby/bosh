#!/usr/bin/env ruby

# Copyright (c) 2012 Active Technologies, Inc.

# Usage example:
#      $ cd /bosh-installation-dir/bosh/cloudstack_cpi/bin
#      $ ruby bosh_cloudstack_console -c /path-to-file/cloudstack_cpi_secure_config.yml
#      or just
#      $ ruby bosh_cloudstack_console

# Put your access credentials securely in a separate file.
# Contents of the file cloudstack.yaml:
# ---
# access_key_id: key
# secret_access_key: key
# service_endpoint: domain

# run in the bundler context
gemfile = File.expand_path("../../Gemfile", __FILE__)
if File.exists?(gemfile)
  ENV["BUNDLE_GEMFILE"] = gemfile
  require "rubygems"
  require "bundler/setup"
end

# parse config with cloudstack access credentials
require 'yaml'
require "optparse"

config_file = File.expand_path("../cloudstack.yaml", __FILE__)

opts_parser = OptionParser.new do |opts|
  opts.on("-c", "--config FILE") { |file| config_file = file }
end

opts_parser.parse!

unless config_file
  puts opts_parser
  exit(1)
end

puts "=> Loading secure configuration from #{config_file}"

def get_config_options(config)
  @access_key_id = config["access_key_id"]
  @secret_access_key = config["secret_access_key"]
  @service_endpoint = config["service_endpoint"]
end

get_config_options(YAML.load(File.read(config_file)))

puts "=> CloudStack service endpoint is #{@service_endpoint}"

puts "=> Performing test operations with cloudstack_cpi code"


# add logger
#require "../../cli/lib/cli"
$:.unshift(File.expand_path("../../lib", __FILE__))
require "../lib/bosh_cloudstack_cpi"

require 'ostruct'
require 'logger'

cloud_config = OpenStruct.new(:logger => Logger.new(STDOUT))
Bosh::Clouds::Config.configure(cloud_config)

#### TESTS ####

cld = Bosh::CloudStackCloud::Cloud.new({
                                           'cloudstack' => {
                                               'cloudstack_api_key' => "#{@access_key_id}",
                                               'cloudstack_secret_access_key' => "#{@secret_access_key}",
                                               'cloudstack_host' => "#{@service_endpoint}"
                                           }
                                       })

cld.create_stemcell "image", {}